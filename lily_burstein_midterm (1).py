# -*- coding: utf-8 -*-
"""Lily_Burstein_Midterm.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aIh3-ziTTqKI1cWp49S39T6Lbmn4TPTe

# Getting Set Up
"""

# load libraries
import pandas as pd
import matplotlib.pyplot as plt
import geopandas as gpd
import seaborn as sns

# import df with the variable name "voters"
voters = pd.read_csv("https://raw.githubusercontent.com/fivethirtyeight/data/refs/heads/master/voter-registration/new-voter-registrations.csv")

"""# Research Question

Purpose:
- The purpose of this project is to examine voter registration trends from 2016 to 2020.

Goal:
- The goal of this project is to identify significant shifts in voter registration patterns both nationally and at the state-level with a key focus on the swing-state, Florida.

Importance:
- The importance of this project is that understanding these trends can help stakeholders such as policymakers, advocacy groups, and election officials imporve their voter registration and outreach strategies.


Research Questions:

Question 1: What months overall had the highest and lowest voter registration?

Question 2: Did Florida's voter registration patterns in 2016 and 2020 follow the national trend or show unique behavior?

# Data Processing
"""

# Show the first five rows of data and explain what the variable names are
voters.head()

"""**Variable Name Explanations**

*   Jurisdiction: State
*   Year: Year
*   Month: Month
*   New Registered Voters: The amount of newly registerd voters per month per year in that state




"""

# Check for any missing data
voters.isna()

# check if any values equal to null (n.a)
voters.isnull()

# Check your data types.
voters.dtypes

# rename the jurisdiction column to "NAME" and the "New registered voters" to "registered_voters" to use througout the notebook
voters.columns

voters=voters.rename(columns={"Jurisdiction":"NAME"})

voters=voters.rename(columns={"New registered voters":"registered_voters"})

voters.columns

"""**Explain any potential limitations to your data**

There is the risk that the data could potentially be incomplete, potentially due to coverage gaps. There could be less data from certain counties than others, making the data an inacurate representation of the state as a whole. Also, the way that voter registation is reported could potentially differ on a state-by-state basis. Meaning that the data from one state could be underepresented or overrepresented compared to other states.This data also does not take into account outside factors such as the amount of voter suppression in each state.

# Exploratory Data Analysis

**When was the highest amount of new voter registration? Show the state, month, year, and number of registered voters.**
"""

voters.columns

# create df highest_vote and sort df by registered_voters and have it in order of greatest to least
highest_vote = voters.sort_values("registered_voters", ascending=False)

# find highest
highest_vote_1 = highest_vote.head(1)
highest_vote_1

"""My Answer:

California, Feb, 2020, 238281

**What is the average voter registration?**
"""

voters["registered_voters"].mean()

"""My Answer:
  
48223.46226415094

**Create a dataframe called "high_voters" showing only the times where voter registration was higher than your above average. How many times did this happen?**
"""

# Create high_voters df
high_voters = voters.loc[voters.registered_voters > voters["registered_voters"].mean()]

# check that it worked
high_voters.registered_voters.min()

# count the amount of times this happend
count_high_voters = high_voters.registered_voters.count()
count_high_voters

"""My Answer:

36

**How many times did each state go above the national average for new voter registration?**
"""

# create df state_counts which groups the df high_voters by the coulumn NAME and then counts the number of non-null values in the registered_voters column for each state
state_counts = high_voters.groupby('NAME').registered_voters.count()

state_counts

# check my work
texas_voters = high_voters[high_voters["NAME"]=="Texas"].count()
print(texas_voters)

state_counts

"""My Answer:


*   Arizona: 3
*   California: 7
*   Florida: 7
*   Georgia: 1
*   Illinois: 4
*   North Carolina: 6
*   Texas: 8

**Which three states had the highest average voter registration overall? Show only the top three results.**
"""

# group by state and calculate mean registered voters
average_state = voters.groupby('NAME')['registered_voters'].mean()
average_state

# sort in greatest to least order and only show the top 3
top_3_average = average_state.sort_values(ascending=False)
top_3_average.head(3)

"""My Answer:

1. California: 144545.375
2. Texas: 114610.100
3. Florida: 65868.125

# Data Visualization

Create a plot showing the voter registratation by state.

- A dataframe/a way to show the total voters registered per state. If you create a new dataframe, you may need to include reset_index().
- A figure size of 10,10
- Clearly legible labels and titles
- A color palette that is not the default palette
- Comment on the trends you see
"""

# create df
total_by_state = voters[["NAME", "registered_voters"]].groupby("NAME").sum().reset_index()

# check that it worked
total_by_state.head(12)

# create palette
palette1 = sns.color_palette(["red", "blue", "yellow", "green"])

# create plt
plt.figure(figsize=(10, 10))

sns.barplot(x="registered_voters", y="NAME", data=voters, palette=palette1)

plt.title('Voter Registration by State')
plt.xlabel('Number of Registered Voters')
plt.ylabel('State')

plt.show()

"""My comments:

California, Texas, and Florida have the higest amount of registered voters. This makes sense as they are the states included on the graph which have the highest population.

Produce a plot comparing voter registation in 2016 and 2020.

- Color the graph based on the month.(1 pt)
- Change the default color palette used. (1 pt)
- Comment on any trends you see. (2 pts)
- Add the appropriate labels and title (1)
- Comment on any trends you see (2 points)
"""

# create df
by_year = voters[["registered_voters", "Year", "Month"]].groupby(["Year", "Month"]).sum().reset_index()

# check that it worked
by_year.head(10)

# make plt
plt.figure(figsize=(10, 10))

sns.barplot(x="Year", y="registered_voters", hue="Month", data=by_year, palette=palette1)

plt.title("Voter Registration: 2016 vs 2020")
plt.xlabel("Year")
plt.ylabel("Number of Registered Voters")
plt.legend(title="Month")

plt.show()

"""My Comments:

 Nationally, there was a noticeable increase in voter registration in the month of February, but a decrease in every other month from 2016 to 2020.

**Create a data visualization that relates to either your state level research question or your national level reserach question. If one of your questions was answered by the above graphs, you may not use that question. (12 points)**
"""

# create df for 2016 national
just_16 = voters[voters["Year"] == 2016].groupby("Year")["registered_voters"].mean().reset_index()

just_16

# create df for 2020 national
just_20 = voters[voters["Year"] == 2020].groupby("Year")["registered_voters"].mean().reset_index()

just_20

# create florida average 2016 df
# get just 2016
mean_florida_16 = voters[voters["Year"] == 2016]
# filter to have only florida and find mean voters
mean_florida_16 = mean_florida_16[mean_florida_16["NAME"] == "Florida"]["registered_voters"].mean()

mean_florida_16

# create florida average 2020 df
# get just 2020
mean_florida_20 = voters[voters["Year"] == 2020]
# filter to have only florida and find mean voters
mean_florida_20 = mean_florida_20[mean_florida_20["NAME"] == "Florida"]["registered_voters"].mean()

mean_florida_20

# actually get the mean so that plt works
national_avg_2016 = just_16["registered_voters"].mean()
national_avg_2020 = just_20["registered_voters"].mean()

plt.figure(figsize=(10, 10))

# In order to make this not the most complicated code of all time I will make lists!
labels = ["National 2016", "Florida 2016", "National 2020", "Florida 2020"]
values = [national_avg_2016, mean_florida_16, national_avg_2020, mean_florida_20]
category = ["National", "Florida", "National", "Florida"]

# Create the barplot with different colors for National and Florida
sns.barplot(x=labels, y=values, hue=category, palette=["blue", "green"])

# Show plot
plt.show()

"""My Question: Did Florida's voter registration patterns in 2016 and 2020 follow the national trend or show unique behavior?

My Answer: Florida showed unique behavior in 2020. Nationally, there was a decrease in voter registration on average between 2016 and 2020, but in Florida, there was not a decrease or increase. The amount of voter registration stayed about the same.

# Mapping
"""

# Load in our shape file data from the mapping unit.

!git clone https://github.com/SFord87/325-Datasets

shapefile = '/content/325-Datasets/cb_2018_us_state_500k.shp'

states = gpd.read_file(shapefile)

states.head()

states.dtypes

states.plot()

minx, miny, maxx, maxy = -125, 24.396308, -66.93457, 49.384358

# Set our continental US bounding box to us for the next questions. (2 points)

bbox = states.cx[minx:maxx, miny:maxy]

bbox.plot(figsize=(10, 10))
plt.title("Continental US")
plt.show()

"""**Create a dataframe that shows the average voter registration per state.**"""

avg_voter = voters.groupby("NAME")["registered_voters"].mean().reset_index()
avg_voter

"""**Merge the above dataframe results with the mapping data. You will want to use inner for the how argument**"""

merged_data = pd.merge(bbox, avg_voter, on="NAME", how="inner")

merged_data.head()

"""**Make a map featuring the following**

- a figure size of 25, 15 (1 point)
- A boundary map of the continental US data, with a black linewidth of .25 (2 points)
- The states that we have the voter registration information for highlighted in a color map of your choice. (3 points)
- A legend and a title. (2 points)
- Bonus point: add the state abbrevations and average number of registered voters to the map
"""

# create figure
fig = plt.figure(1, figsize=(25, 15))
ax = fig.add_subplot(111)

# plt map with black linewidth
bbox.plot(ax=ax, linewidth=0.25, color='lightgray')

# add states
merged_data.plot(column="registered_voters",ax=ax,legend=True,cmap="Blues",edgecolor="black")

# add title
ax.set_title("Voter Registration by State (Average)", fontsize=16)

# add state abrv
bbox.apply(lambda x: ax.annotate(text=x.NAME,
    xy=(x.geometry.centroid.x, x.geometry.centroid.y),ha="center",fontsize=8),axis=1)
# add voter registration (make sure it is offset a bit so that text doesn't overlap)
merged_data.apply(lambda x: ax.annotate(text=x.registered_voters,
    xy=(x.geometry.centroid.x, x.geometry.centroid.y - 0.7),ha="center",fontsize=8),axis=1)

plt.show()

"""# Conclusion

Write a conclusion section that includes

- Insights: the insights/outcomes of your notebook (5 points)
- Suggestions: Any suggestions or ideas you could offer your client (5 point)
- Possible next steps: At least one step that you would take if continuing to work with this project (5 points)
- Each section should be at least 3-4 complete sentences.

Insights:


- From the voter registration data, it was found that California, Texas, and Florida consistently had the highest number of registered voters, which aligns with their large populations. Nationally, there was a noticeable increase in voter registration in the month of February, but a decrease in every other month from 2016 to 2020. Interestingly, Florida displayed unique behavior. While voter registration trends nationally showed a decrease from 2016 to 2020, Florida's registration levels remained stable, showing no significant change.

Suggestions:


- Given that Florida did not show a decrease in voter registration between 2016 and 2020, it might be valuable for other states to look into Florida's specific voter engagement strategies to understand what has worked. States like California and Texas, which have high population numbers, may benefit from focusing their efforts on regions with lower registration rates to improve overall voter participation. Additionally, targeting February, the peak month for registration, for awareness campaigns could help further increase participation.


Possible Next Steps:


- To further understand voter behavior, tracking voter turnout in both years in addition to registration could be a great next step. Additionally, examining the impact of specific voter registration laws or political events, such as changes in voting requirements or accessibility could be helpful in making sense of the differeing voter registration rates of each state. Further breakdowns by county or demographic groups might guide more targeted outreach efforts.

# Github
Post this to your Github and include the accessible link either here or on brightspace.

I posted the link in the comments section on brightspace.

# Academic Integrity Statement

Academic Integrity Statement
By writing my name in the cell below, I certify that:

1. I did not use resources other than:
- the Python notebooks provided by the instructor,
- links provided in this notebook,
- the assigned readings, and
-my own personal notes

2. This means that I did not:
- look up anything on Google, or Stack Overflow, Chatgpt, &c.,
- discuss the content of the exam with anyone other than the instructors or TAs, or
- do anything that technically doen't break these rules but is against their spirit.

Lily Burstein
"""